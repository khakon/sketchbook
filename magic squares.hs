(//) :: Eq a => [a] -> a -> [a]
[] // y = []
(x : xs) // y =
  if x == y
    then xs
    else x : (xs // y)

(///) :: Eq a => [a] -> [a] -> [a]
s /// [] = s
s /// (x : xs) = (s // x) /// xs

ms_3 :: [[Integer]]
ms_3 = [[x1, x2, x3, y1, y2, y3, z1, z2, z3] | 
            x1 <- [1 .. 9], 
            x2 <- [1 .. 9] /// [x1], 
            x3 <- [1 .. 9] /// [x1, x2], 
            y1 <- [1 .. 9] /// [x1, x2, x3], 
            y2 <- [1 .. 9] /// [x1, x2, x3, y1], 
            y3 <- [1 .. 9] /// [x1, x2, x3, y1, y2], 
            z1 <- [1 .. 9] /// [x1, x2, x3, y1, y2, y3], 
            z2 <- [1 .. 9] /// [x1, x2, x3, y1, y2, y3, z1], 
            z3 <- [1 .. 9] /// [x1, x2, x3, y1, y2, y3, z1, z2], 
            x1 + x2 + x3 == y1 + y2 + y3, 
            x1 + x2 + x3 == z1 + z2 + z3, 
            x1 + x2 + x3 == x1 + y1 + z1, 
            x1 + x2 + x3 == x2 + y2 + z2, 
            x1 + x2 + x3 == x3 + y3 + z3, 
            x1 + x2 + x3 == x1 + y2 + z3, 
            x1 + x2 + x3 == x3 + y2 + z1]